# ShopSerach_v2.0
# Please note: ShopSearch has been completely rewritten!
#
# By HoneyBuzzard & nfell2009
# © nhSkript - nfell2009 & HoneyBuzzard
# Please note: the converter requires ShopSearch_v1.4 for a full conversion
# Do NOT redistrubute this code! For more info see: http://nfell2009.uk/shopsearch/no-to-sharing

options:
	P: &8[&aSS&8]&a
	Click-Here: &a&l
	Other-Text: &a
	Custom-Economy: false # Set to true for custom economy. See: http://nfell2009.uk/shopsearch/docs
	CE-Command-Check: false
	CE-Command-Check2: false
	CE-Command-Add: false
	QuickShop: false
	B-C: false
	GiftCard-Payment: false
	AllowGlobal: false # This may cause lag if the playerlist gets big

on script load:
	if {ss::setting::converted} is not true:
		message "{@P} ShopSearch_v2.0 is starting conversion from ShopShop_1.X. Please note the converter will convert:" to console
		message "{@P} - Player chests (requires ShopSearch_v1.4 to have been installed)" to console
		message "{@P} - Player data" to console
		message "{@P} - ShopSearch data" to console
		message "{@P} - QuickShop data (requires ShopSearch_v1.4 to have been installed)" to console
		message "{@P} - Stats (requires ShopSearch_v1.4 to have been installed)" to console
		if {ss.playerlist::*} is not empty:
			loop {ss.playerlist::*}:
				loop {ss.%loop-value%.chests::*}:
					add loop-value-2 to {ss::player::%uuid of loop-value-1%::chests::*}
					set {_c} to {ss.quickshop.%loop-value-2%}
					set {ss::quickshop::%{_c}%} to loop-value-2
					set {ss::quickshop::%loop-value-2%} to {_c}
					set {ss::quickshop::%{_c}%::playerto} to {ss.quickshop.details.%{_c}%::playerto}
					set {ss::quickshop::%{_c}%::amount} to {ss.quickshop.details.%{_c}%::amount}
					set {ss::quickshop::%{_c}%::price} to {ss.quickshop.details.%{_c}%::price}
					set {ss::quickshop::%{_c}%::item} to {ss.quickshop.details.%{_c}%::item}
				delete {ss.%loop-value%.chests::*}
				set {ss::player::%uuid of loop-value%} to loop-value
				set {ss::player::%uuid of loop-value%::exists} to true
				set {ss::player::%uuid of loop-value%::buying} to false
				set {ss::player::%uuid of loop-value%::last-player} to {ss.%uuid of loop-value%.lastplayer}
				set {ss::setting::playerlist::%uuid of loop-value%} to loop-value
		loop {ss.itemlist-itm::*}:
			set {ss::stats::itm::%loop-value%} to loop-value
			set {ss::stats::num::%loop-value%} to {ss.itemlist-num::%loop-value%}
		loop {ss.playersales-p::*}:
			set {ss::stats::playersales::p::%loop-value%} to loop-value
			set {ss::stats::playersales::n::%loop-value%} to {ss.playersales-n::%loop-value%}
	if {ss::settings::cga-key} is not set:
		execute console command "/codegenapi g k shopsearch_v2.0"
		set {ss::settings::cga-key} to {cga.shopsearch_v2.0.code}
		
on script load:
	set {ss::setting::currency} to "£"
	
on join:
	if {ss::player::%uuid of player%::exists} is not set:
		set {ss::player::%uuid of player%::exists} to true
		set {ss::player::%uuid of player%::buying} to false
	if {ss::player::%uuid of player%::lastplayer} is not set:
		set {ss::player::%uuid of player%::lastplayer} to player
	if {ss::setting::playerlist::%player%} is not set:
		set {ss::setting::playerlist::%player%} to player
	if {ss::player::%uuid of player%::lastplayer} is not player:
		set {_p} to {ss::player::%uuid of player%::lastplayer} parsed as offline player
		loop {ss::player::%uuid of player%::chests::*}:
			set {_loc} to loop-value
			if {ss::quickshop::%loop-value%} is set:
				set {_c} to {ss::quickshop::%loop-value%}
				set {ss::quickshop::%{_c}%::playerto} to player
			set {McCS.ChestOwner.%loop-value%} to player
			add 1 to y coord of {_loc}
			set {McCS.Owner.%{_loc}%} to player
			set line 1 of block at {_loc} to "%player%"
			
command /ss-admin [<text>] [<text>] [<text>]:
	description: SearchShop Admin
	permission: shopsearch.admin
	trigger:
		if {ss::player::%uuid of player%::blocked} is true:
			message "{@P} Your ShopSearch account has been blocked. Please contact a member of the staff team if you think this is a problem."
			stop
		if arg 1 is not set:
			make player execute command "/ss-admin help"
		else if arg 1 is "help":
			message "{@P} ShopSearch admin command help"
			message "{@P} /ss-admin delete <user> - Deletes a user's shops"
			message "{@P} /ss-admin clearall <user> - Removes the users shops AND the chest/sign blocks"
			message "{@P} /ss-admin convert <user from> <user to> - Converts a chest of a user to another's"
			message "{@P} /ss-admin block <player> - Blocks a player from using any ShopSearch command"
			message "{@P} /ss-admin unblock <player> - Unblocks a player - allows them to use ShopSearch commands again"
		else if arg 1 is "block":
			if arg 2 is set:
				if arg 3 is set:
					set {_p} to arg 2 parsed as offline player
					if {ss::player::%uuid of {_p}::exists} is true:
						set {ss::player::%uuid of {_p}%::blocked} to true
						message "{@P} You have blocked: %{_p}%'s access to ShopSearch!"
		else if arg 1 is "unblock":
			if arg 2 is set:
				if arg 3 is set:
					set {_p} to arg 2 parsed as offline player
					if {ss::player::%uuid of {_p}::exists} is true:
						set {ss::player::%uuid of {_p}%::blocked} to false
						message "{@P} You have unblocked: %{_p}%'s access to ShopSearch!"
		else if arg 1 is "delete":
			if arg 2 is set:
				set {_p} to arg 2 parsed as offline player
				set {_uuid} to uuid of {_p}
				if {ss::player::%{_u}%::exists} is true:
					if {ss::player::%{_u}%::chests::*} is not empty:
						set {_s} to size of {ss::player::%{_u}%::chests::*}
						delete {ss::player::%{_u}%::chests::*}
						message "{@P} Deleted %{_p}%'s shops (%{_s}%)"
					else:
						message "{@P} %{_p}% has no shops"
				else:
					message "{@P} That user doesn't exist"
			else:
				message "{@P} You must provide a player's name to remove."
		else if arg 1 is "clearall":
			if arg 2 is set:
				set {_p} to arg 2 parsed as offline player
				set {_uuid} to uuid of {_p}
				if {ss::player::%{_u}%::exists} is true:
					if {ss::player::%{_u}%::chests::*} is not empty:
						loop {ss::player::%{_u}%::chests::*}:
							set {_loc} to loop-value
							set block at {_loc} to air
							add 1 to y coord of {_loc}
							set block at {_loc} to air
							add 1 to {_num}
						message "{@P} Cleared %{_p}%'s shops (%{_num}%/%size of {ss::player::%{_u}%::chests::*}%)"
						delete {ss::player::%{_u}%::chests::*}
					else:
						message "{@P} %{_p}% has no shops"
				else:
					message "{@P} That user doesn't exist"
			else:
				message "{@P} You must provide a players name to clear"
		else if arg 1 is "convert":
			if arg 2 is set:
				if arg 3 is set:
					set {_p} to arg 2 parsed as offline player
					set {_u} to uuid of {_p}
					set {_p2} to arg 3 parsed as offline player
					set {_u2} to uuid of {_p2}
					if {ss::player::%{_u}%::exists} is true:
						message "{@P} Converting chests for: %arg 2% to %arg 3%"
						loop {ss::player::%{_u}%::chests::*}:
							add loop-value to {ss::player::%{_u2}%::chests}
							set {_loc} to loop-value
							if {ss::quickshop::%loop-value%} is set:
								set {_c} to {ss::quickshop::%loop-value%}
								set {ss::quickshop::%{_c}%::playerto} to player
							set {McCS.ChestOwner.%loop-value%} to player
							add 1 to y coord of {_loc}
							set {McCS.Owner.%{_loc}%} to player
							set line 1 of block at {_loc} to "%player%"
							add 1 to {_num}
						message "{@P} Successfully converted chests from %arg 2% to %arg 3% (%{_num}%/%size of {ss::player::%{_u}%::chests::*}%/%size of {ss::player::%{_u2}%::chests::*}%)"
						delete {ss::player::%{_u}%::chests}
					else:
						message "{@P} Player: %{_p}% doesn't exist!"
				
command /shopsearch [<text>] [<text>] [<text>] [<text>]:
	permission: ss.admin
	trigger:
		if {ss::player::%uuid of player%::blocked} is true:
			message "{@P} Your ShopSearch account has been blocked. Please contact a member of the staff team if you think this is a problem."
			stop
		if arg 1 is not set:
			message "{@P} Do /ss help - for help"
		else if arg 1 is "about":
			if arg 2 is "me":
				message "{@P} Shops: %size of {ss::player::%uuid of player%::chests::*}%"
				set {_n} to 0
				set {_co} to 0
				loop {ss::player::%uuid of player%::chests::*}:
					add {ss::player::%uuid of player%::sales::%loop-value%} to {_co}
					if {ss::player::%uuid of player%::sales::%loop-value%} is greater than or equal to {_n}:
						set {_n} to {ss::player::%uuid of player%::sales::%loop-value%}
						set {_l} to loop-value
						set {_c} to {ss::quickshop::%loop-value%}
				message "{@P} Best Shop: Sales - %{_n}% QuickShop - %{_c}% - Location - %{_l}%"
				message "{@P} Total Sales: %{_co}%"
			else if arg 2 is "shopsearch" or "ss":
				message "{@P} About ShopSearch:"
				message "{@P} Script: %script%"
				set {_s::*} to script split at "_"
				message "{@P} Version: %{_s::2}%"
				message "{@P} ShopSearch is developed by nfell2009 and HoneyBuzzard. Its a powerful script allowing the user to use a command to search a users set shops and buy from them without having to visit that shop"
		else if arg 1 is "menu":
			if arg 2 is set:
				set {_p} to arg 2 parsed as offline player
				set {_u} to uuid of {_p}
				set {_size} to rounded up size of {ss::player::%{_u}%::chests::*} / 9
				open chest with {_size} rows named "&aShop of: %{_p}%" to player
				wait 1 tick
				set {_num} to -3
				loop {ss::player::%{_u}%::chests::*}:
					add 1 to {_num}
					set {_loc} to location of block above block at loop-value
					set {_cloc} to location of block at loop-value
					set {_b} to block at {_loc}
					set {_i} to line 4 of {_b} parsed as item
					set {_a} to line 2 of {_b} parsed as integer
					if line 1 of {_b} is "[Chest Shop]":
						set {_owner} to {McCS.Owner.%{_loc}%}
					else:
						set {_owner} to line 1 of {_b}
					if block at {_cloc} contains {_a} of {_i}:
						if {ss::quickshop::%{_cloc}%} is set:
							format slot {_num} of player with {_i} named "&aIn stock" with lore "&aPlayer to: %{_owner}%||&aAmount: %line 2 of {_b}%||&aPrice: %line 3 of {_b}%||&aItem: %line 4 of {_b}%||&aQuickShop Code: %{ss::quickshop::%{_cloc}%}%" to close then run "ss-console quickshop %player% %{ss::quickshop::%{_cloc}%}%"
						else:
							format slot {_num} of player with {_i} named "&aIn stock" with lore "&aPlayer to: %{_owner}%||&aAmount: %line 2 of {_b}%||&aPrice: %line 3 of {_b}%||&aItem: %line 4 of {_b}%" to close then run "ss-console menu %player% %{_p}% %line 2 of {_b}% %line 3 of {_b}% %line 4 of {_b}% %{_cloc}%"
					else:
						format slot {_num} of player with {_i} named "&4Out of stock" with lore "&4Unfortunately this item is currently out of stock!" to be unstealable
		else if arg 1 is "quickshop":
			if arg 2 is set:
				if {ss::quickshop::%arg 2%} is set:
					set {_c} to arg 2
					set {_loc} to {ss::quickshop::%{_c}%}
					add 1 to y coord of {_loc}
					set {_a} to {ss::quickshop::%{_c}%::amount}
					set {_i} to {ss::quickshop::%{_c}%::item}
					set {_p} to {ss::quickshop::%{_c}%::playerto}
					set {_l3} to {ss::quickshop::%{_c}%::price}
					message "{@P} Item: %{_i}%"
					message "{@P} Amount: %{_a}%"
					message "{@P} Price: %{_l3}%"
					message "{@P} Buying from: %{_p}%"
					send json of "{@P} {@Click-Here}Click Here " tooltip "{@P} To confirm your purchase" run "/ss confirm" then "{@Other-Text}to confirm your purchase" to player
				else:
					message "{@P} Invalid code"
			else:
				message "{@P} You must provide a code"
		else if arg 1 is "stats":
			if arg 2 is "help":
				message "{@P} Stats help:"
				message "{@P} /ss stats shops - Lists number of shops"
				message "{@P} /ss stats money - Total money that has been sent in SS"
				message "{@P} /ss stats items - Best selling items"
				message "{@P} /ss ststs users - Most selling users"
			if arg 2 is "shops":
				loop {ss::setting::playerlist::*}:
					add size of {ss::player::%uuid of loop-value%::chests::*} to {_count}
				if {_count} is not set:
					set {_count} to 0
				message "{@P} There are currently: %{_count}% shops!"
			else if arg 2 is "money":
				if {ss::global::totalmoney} is not set:
					set {ss::global::totalmoney} to 0
				if {@B-C} is true:
					message "{@P} A total of: %{ss::setting::currency}%%{ss::global::totalmoney}% has been sent using ShopSearch"
				else:
					message "{@P} A total of: %{ss::global::totalmoney}%%{ss::setting::currency}% has been sent using ShopSearch"
			else if arg 2 is "items":
				if {ss::stats::itm::*} is empty:
					message "{@P} There are no top selling items."
					stop
				else if {ss::stats::num::*} is empty:
					message "{@P} There are no top selling items."
					stop
				message "{@P} Top selling items:"
				loop {ss::stats::itm::*}:
					add 1 to {_num}
					set {_item-%{_num}%} to {ss::stats::num::%loop-value%}
					if {_num} = 10:
						exit
				loop {ss::stats::itm::*}:
					loop 10 times:
						add 1 to {_cou}
						if {ss.itemlist-num::%loop-value%} > {_item-%{_num}%}:
							set {_output-list::%{_num}%} to "%loop-value% - %{ss::stats::num::%loop-value%}%"
				loop {_output-list::*}:
					message "{@P} %loop-value%"
			else if arg 2 is "users":
				if {ss::stats::playersales::p::*} is empty:
					message "{@P} There are no top selling players."
					stop
				else if {ss::stats::playersales::n::*} is empty:
					message "{@P} There are no top selling players."
					stop
				message "{@P} Top selling players:"
				loop {ss::stats::playersales::p::*}:
					add 1 to {_num}
					set {_item-%{_num}%} to {ss::stats::playersales::p::%loop-value%}
					if {_num} = 10:
						exit
				loop {ss::stats::playersales::p::*}:
					loop 10 times:
						add 1 to {_cou}
						if {ss::stats::playersales::n::*} > {_item-%{_num}%}:
							set {_output-list::%{_num}%} to "%loop-value% - %{ss::stats::playersales::n::%loop-value%}%"
				loop {_output-list::*}:
					message "{@P} %loop-value%"
		else if arg 1 is "add":
			if arg 2 is not set:
				set {ss::player::%uuid of player%::setting::add-num} to 1
			else if arg 2 is "unlimited":
				set {ss::player::%uuid of player%::setting::add-num} to arg 2 parsed as integer
			else:
				set {ss::player::%uuid of player%::setting::add-num} to "unlimited"
			message "{@P} You can now add: %{ss::player::%uuid of player%::setting::add-num}% chests!"
		else if arg 1 is "remove":
			if arg 2 is not set:
				set {ss::player::%uuid of player%::setting::rev-num} to 1
			else if arg 2 is "unlimited":
				set {ss::player::%uuid of player%::setting::rev-num} to arg 2 parsed as integer
			else:
				set {ss::player::%uuid of player%::setting::rev-num} to "unlimited"
			message "{@P} You can now remove: %{ss::player::%uuid of player%::setting::rev-num}% chests!"
			set {ss::player::%uuid of player%::setting::c-m} to "remove"
		else if arg 1 is "cancel":
			delete {ss::player::%uuid of player%::setting::c-m}
			delete {ss::player::%uuid of player%::setting::rev-num}
			delete {ss::player::%uuid of player%::setting::add-num}
			message "{@P} Cancelled adding/removing a chest."
		else if arg 1 is "shop":
			if arg 2 is "g" or "global":
				if {@AllowGlobal} is true:
					if arg 3 is set:
						if arg 4 is set:
							set {_i} to arg 3 parsed as item
							set {_a} to arg 4 parsed as number
							if {_a} contains ".":
								set {_ar::*} to {_a} split at "."
								set {_a} to {_ar::1}
								message "{@P} You can only have an integer for the amount! ShopSearch has converted: %{_ar::2}% to %{_a}%"
							set {_shops} to 0
							set {_users} to 0
							set {ss::player::%uuid of player%::startedsearch} to now
							loop {ss::setting::playerlist::*}:
								add 1 to {_users}
								loop {ss::player::%uuid of loop-value%::chests::*}:
									add 1 to {_shops}
									set {_loc} to loop-value
									set {_bloc} to loop-value
									add 1 to y coord of {_loc}
									if block at {_loc} is sign:
										set {_b} to block at {_loc}
									if line 1 of {_b} is "[Chest Shop]":
										set {_p} to {McCS.Owner.%{_loc}%}
										set {_t} to true
									else if line 1 of {_b} is {_p}:
										set {_t} to true
									if {_t} is true:
										if line 2 of {_b} is {_a}:
											if block at {_bloc} contains {_a} of {_i}:
												if line 4 of {_b} is {_i}:
													set {_l3} to line 3 of {_b}
													set {_arr::*} to {_l3} split at ":"
													set {_l3} to {_arr::1}
													replace all "B" and " " in {_l3} with ""
													set {ss::player::%uuid of player%::transaction::buying} to true
													set {ss::player::%uuid of player%::transaction::sign-loc} to {_loc}
													set {ss::player::%uuid of player%::transaction::chest-loc} to {_bloc}
													set {ss::player::%uuid of player%::transaction::amount} to {_a}
													set {ss::player::%uuid of player%::transaction::item} to {_i}
													set {ss::player::%uuid of player%::transaction::playerto} to {_p}
													set {ss::player::%uuid of player%::transaction::price} to {_l3}
													message "{@P} ShopSearch has found a perfect match for you!"
													message "{@P} Item: %{_i}%"
													message "{@P} Amount: %{_a}%"
													message "{@P} Price: %{_l3}%"
													message "{@P} Buying from: %{_p}%"
													send json of "{@P} {@Click-Here}Click Here " tooltip "{@P} To confirm your purchase" run "/ss confirm" then "{@Other-Text}to confirm your purchase" to player
													exit
							message "{@P} Stats about this search..."
							message "{@P} ShopSearch checked: %{_users}%/%size of {ss::setting::playerlist::*}% users"
							message "{@P} ShopSearch checked: %{_shops}% shops"
							message "{@P} This search has taken: %difference between now and {ss::player::%uuid of player%::startedsearch}%"
			else if arg 2 is set:
				if arg 3 is set:
					if arg 4 is set:
						set {_p} to arg 2 parsed as offline player
						set {_i} to arg 3 parsed as item
						set {_a} to arg 4 parsed as number
						set {_u} to uuid of {_p}
						if {_a} contains ".":
							set {_ar::*} to {_a} split at "."
							set {_a} to {_ar::1}
							message "{@P} You can only have an integer for the amount! ShopSearch has converted: %{_ar::2}% to %{_a}%"
						set {_counter} to 0
						loop {ss::player::%{_u}%::chests::*}:
							add 1 to {_counter}
							set {_loc} to loop-value
							set {_bloc} to loop-value
							add 1 to y coord of {_loc}
							if block at {_loc} is sign:
								set {_b} to block at {_loc}
							if line 1 of {_b} is "[Chest Shop]":
								set {_p} to {McCS.Owner.%{_loc}%}
								set {_t} to true
							else if line 1 of {_b} is {_p}:
								set {_t} to true
							if {_t} is true:
								if line 2 of {_b} is {_a}:
									if block at {_bloc} contains {_a} of {_i}:
										if line 4 of {_b} is {_i}:
											set {_l3} to line 3 of {_b}
											set {_arr::*} to {_l3} split at ":"
											set {_l3} to {_arr::1}
											replace all "B" and " " in {_l3} with ""
											set {ss::player::%uuid of player%::transaction::buying} to true
											set {ss::player::%uuid of player%::transaction::sign-loc} to {_loc}
											set {ss::player::%uuid of player%::transaction::chest-loc} to {_bloc}
											set {ss::player::%uuid of player%::transaction::amount} to {_a}
											set {ss::player::%uuid of player%::transaction::item} to {_i}
											set {ss::player::%uuid of player%::transaction::playerto} to {_p}
											set {ss::player::%uuid of player%::transaction::price} to {_l3}
											message "{@P} ShopSearch has found a perfect match for you!"
											message "{@P} Item: %{_i}%"
											message "{@P} Amount: %{_a}%"
											message "{@P} Price: %{_l3}%"
											message "{@P} Buying from: %{_p}%"
											send json of "{@P} {@Click-Here}Click Here " tooltip "{@P} To confirm your purchase" run "/ss confirm" then "{@Other-Text}to confirm your purchase" to player
											exit
						message "{@P} There were: %size of {ss::player::%{_u}%::chests::*}% shops to check. ShopSearch checked %{_counter}%/%size of {ss::player::%{_u}%::chests::*}% before finding the perfect shop"
		else if arg 1 is "confirm":
			if {ss::player::%uuid of player%::transaction::buying} is true:
				set {_a} to {ss::player::%uuid of player%::transaction::amount}
				set {_i} to {ss::player::%uuid of player%::transaction::item}
				set {_p} to {ss::player::%uuid of player%::transaction::playerto}
				set {_u} to uuid of {_p}
				set {_pr} to {ss::player::%uuid of player%::transaction::price}
				set {_sloc} to {ss::player::%uuid of player%::transaction::sign-loc}
				set {_cloc} to {ss::player::%uuid of player%::transaction::chest-loc}
				if {@GiftCard-Payment} is true:
					set {_l} to lore of the player's tool
					set {_ll::*} to {_l} split at ":"
					replace all " " in {_ll::2} with ""
					set {_c} to {_ll::2}
					if {gfc::codes::%{_c}%::redeemed} is false:
						if {gfc::codes::%{_c}%::value} is less than {_pr}:
							subtract {gfc::codes::%{_c}%::value} from {_pr}
							if {@Custom-Economy} is true:
								execute console command "/{@CE-Command-Check2}"
								wait 1 second
								if {ss::temp::%uuid of player%::do-trans} is not set:
									message "{@P} You can't afford to do that right now"
									stop
							else if {myc.enabled} is true:
								if {myc.%player%.money} is less than {_pr}:
									message "{@P} You can't afford to do that right now"
									stop
							else if {pp::setting::running} is true:
								if {pp::player::%uuid of player%::balance} is less than {_pr}:
									message "{@P} You can't afford to do that right now"
									stop
							else if the player's balance is less than {_pr}:
								message "{@P} You can't afford to do that right now"
								stop
							message "{@P} ShopSearch has used your GiftCard valued at: %{gfc::codes::%{_c}%::value}% and will now subtract funds from your bank"
							set the player's tool to air
							set {gfc::codes::%{_c}%::redeemed} to true
							add 1 to {ss::player::%{_u}%::sales::%{_cloc}%}
						else if {gfc::codes::%{_c}%::value} is equal to {_pr}:
							set the player's tool to air
							set {gfc::codes::%{_c}%::redeemed} to true
							execute console command "/ss-console remove {_i} {_a} _cloc"
							execute console command "/ss-console give {_i} {_a} {_p}"
							if {@Custom-Economy} is true:
								execute console command "/{@CE-Command-Add}"
							else if {myc.enabled} is true:
								add {_pr} to {myc.%{_p}%.money}
							else if {pp::setting::running} is true:
								add {_pr} to {pp::player::%{_u}%::balance}
							else:
								add {_pr} to the balance of {_p}
							message "{@P} You just bought %{_a}% %{_i}% from %{_p}% for %{_pr}%"
							if {ss::player::%uuid of player%::stats::itemlist::itm::%{_i}%} is not set:
								set {ss::stats::itm::%{_i}%} to {_i}
								set {ss::stats::num::%{_i}%} to 1
							else:
								add 1 to {ss::stats::num::%{_i}%}
							if {ss::player::%{_u}%::stats::playersales::p::%{_p}%} is not set:
								set {ss::stats::playersales::p::%{_p}%} to {_p}
								set {ss::stats::playersales::n::%{_p}%} to 1
							else:
								add 1 to {ss::stats::playersales::n::%{_p}%}
							add {_pr} to {ss::global::totalmoney}
							delete {ss::player::%uuid of player%::transaction::*}
							add 1 to {ss::player::%{_u}%::sales::%{_cloc}%}
						else if {gfc::codes::%{_c}%::value} is greater than {_pr}:
							set the player's tool to air
							set {gfc::codes::%{_c}%::redeemed} to true
							execute console command "/ss-console remove {_i} {_a} _cloc"
							execute console command "/ss-console give {_i} {_a} {_p}"
							if {@Custom-Economy} is true:
								execute console command "/{@CE-Command-Add}"
							else if {myc.enabled} is true:
								add {_pr} to {myc.%{_p}%.money}
							else if {pp::setting::running} is true:
								add {_pr} to {pp::player::%{_u}%::balance}
							else:
								add {_pr} to the balance of {_p}
							message "{@P} You just bought %{_a}% %{_i}% from %{_p}% for %{_pr}%"
							if {ss::player::%uuid of player%::stats::itemlist::itm::%{_i}%} is not set:
								set {ss::stats::itm::%{_i}%} to {_i}
								set {ss::stats::num::%{_i}%} to 1
							else:
								add 1 to {ss::stats::num::%{_i}%}
							if {ss::player::%{_u}%::stats::playersales::p::%{_p}%} is not set:
								set {ss::stats::playersales::p::%{_p}%} to {_p}
								set {ss::stats::playersales::n::%{_p}%} to 1
							else:
								add 1 to {ss::stats::playersales::n::%{_p}%}
							add {_pr} to {ss::global::totalmoney}
							subtract {_pr} from {gfc::codes::%{_c}%::value}
							give 1 of paper named "%{gfc::setting::prefix}% GiftCard - Value: %{gfc::codes::%{_c}%::value}%" with lore "&aGift Code: %{_c}%" to the player
							delete {ss::player::%uuid of player%::transaction::*}
							add 1 to {ss::player::%{_u}%::sales::%{_cloc}%}
				if {@Custom-Economy} is true:
					execute console command "/{@CE-Command-Check}"
				else if {myc.enabled} is true:
					execute op command "/myc-transaction normal ShopSearch %player% %{_p}% %{_pr}%"
					if {myc.%player%.tcomplete} is true:
						set {myc.%player%.tcomplete} to false
						execute console command "/ss-console remove {_i} {_a} _cloc"
						execute console command "/ss-console give {_i} {_a} {_p}"
						add {_pr} to {myc.%{_p}%.money}
						message "{@P} You just bought %{_a}% %{_i}% from %{_p}% for %{_pr}%"
						if {ss::player::%uuid of player%::stats::itemlist::itm::%{_i}%} is not set:
							set {ss::stats::itm::%{_i}%} to {_i}
							set {ss::stats::num::%{_i}%} to 1
						else:
							add 1 to {ss::stats::num::%{_i}%}
						if {ss::player::%{_u}%::stats::playersales::p::%{_p}%} is not set:
							set {ss::stats::playersales::p::%{_p}%} to {_p}
							set {ss::stats::playersales::n::%{_p}%} to 1
						else:
							add 1 to {ss::stats::playersales::n::%{_p}%}
						add {_pr} to {ss::global::totalmoney}
						delete {ss::player::%uuid of player%::transaction::*}
						add 1 to {ss::player::%{_u}%::sales::%{_cloc}%}
					else:
						message "{@P} Transaction failed. Please try again."
				else if {pp::setting::running} is true:
					if {pp::player::%uuid of player%::balance} is greater than or equal to {_pr}:
						if {ss::player::%uuid of player%::stats::itemlist::itm::%{_i}%} is not set:
							set {ss::stats::itm::%{_i}%} to {_i}
							set {ss::stats::num::%{_i}%} to 1
						else:
							add 1 to {ss::stats::num::%{_i}%}
						if {ss::player::%{_u}%::stats::playersales::p::%{_p}%} is not set:
							set {ss::stats::playersales::p::%{_p}%} to {_p}
							set {ss::stats::playersales::n::%{_p}%} to 1
						else:
							add 1 to {ss::stats::playersales::n::%{_p}%}
						add {_pr} to {ss::global::totalmoney}
						execute console command "/ss-console remove {_i} {_a} _cloc"
						execute console command "/ss-console give {_i} {_a} {_p}"
						subtract {_pr} from {pp::player::%uuid of player%::balance}
						add {_pr} to {ss.%uuid of player%.buying.playerto}'s balance
						message "{@P} You just bought %{_a}% %{_i}% from %{_p}% for %{_pr}%"
						delete {ss::player::%uuid of player%::transaction::*}
						add 1 to {ss::player::%{_u}%::sales::%{_cloc}%}
					else:
						message "{@P} You can't afford to do that"
				else:
					if player's balance is greater than or equal to {_price}:
						if {ss::player::%uuid of player%::stats::itemlist::itm::%{_i}%} is not set:
							set {ss::stats::itm::%{_i}%} to {_i}
							set {ss::stats::num::%{_i}%} to 1
						else:
							add 1 to {ss::stats::num::%{_i}%}
						if {ss::player::%{_u}%::stats::playersales::p::%{_p}%} is not set:
							set {ss::stats::playersales::p::%{_p}%} to {_p}
							set {ss::stats::playersales::n::%{_p}%} to 1
						else:
							add 1 to {ss::stats::playersales::n::%{_p}%}
						add {_pr} to {ss::global::totalmoney}
						execute console command "/ss-console remove {_i} {_a} _cloc"
						execute console command "/ss-console give {_i} {_a} {_p}"
						subtract {_pr} from the player's balance
						add {_pr} to the balance of {_p}
						message "{@P} You just bought %{_a}% %{_i}% from %{_p}% for %{_pr}%"
						delete {ss::player::%uuid of player%::transaction::*}
						add 1 to {ss::player::%{_u}%::sales::%{_cloc}%}
					else:
						message "{@P} You can't afford to do that"
		else if {ss::api::customcommands::%arg 1%} is set:
			set {_num} to {ss::api::customcommands::%arg 1%::arg-count}
			set {_cmd} to "%{ss::api::customcommands::%arg 1%::command}%"
			if {_num} is 1:
				set {_cmd} to "%{_cmd}% %arg 1%"		
			else if {_num} is 2:
				set {_cmd} to "%{_cmd}% %arg 1% %arg 2%"
			else if {_num} is 3:
				set {_cmd} to "%{_cmd}% %arg 1% %arg 2% %arg 3%"
			else if {_num} is 4:
				set {_cmd} to "%{_cmd}% %arg 1% %arg 2% %arg 3% %arg 4%"
			make player execute command "/%{_cmd}%"
				
command /ss-console [<text>] [<text>] [<text>] [<text>] [<text>] [<text>] [<text>]:
	executable by: console
	trigger:
		if arg 1 is "remove":
			set {_i} to arg 1 parsed as item
			set {_a} to arg 2 parsed as integer
			set {_loc} to {%arg 3%}
			remove {_a} of {_i} from block at {_loc}
		else if arg 1 is "give":
			set {_i} to arg 1 parsed as item
			set {_a} to arg 2 parsed as integer
			set {_p} to arg 3 parsed as offline player
			give {_a} of {_i} to {_p}
		else if arg 1 is "menu":
			set {_p} to arg 2 parsed as offline player
			set {_u} to uuid of {_p}
			send "{@P} We're preparing your shopping experience..." to {_p}
			set {ss::player::%{_u}%::transaction::buying} to true
			set {ss::player::%{_u}%::transaction::playerto} to arg 3
			set {ss::player::%{_u}%::transaction::amount} to arg 4
			set {_pr::*} to arg 5 split at ":"
			set {_ppr} to {_pr::1}
			replace all "B" and " " in {_prr} with ""
			set {ss::player::%{_u}%::transaction::price} to {_ppr}
			set {ss::player::%{_u}%::transaction::item} to arg 6
			set {ss::player::%{_u}%::transaction::chest-loc} to arg 7
			set {_l} to arg 7
			add 1 to y coord of {_l}
			set {ss::player::%{_u}%::transaction::sign-loc} to {_l}
			message "{@P} Checkout:"
			message "{@P} Item: %{ss::player::%{_u}%::transaction::item}%"
			message "{@P} Amount: %{ss::player::%{_u}%::transaction::amount}%"
			message "{@P} Price: %{ss::player::%{_u}%::transaction::price}%"
			message "{@P} Buying from: %{ss::player::%{_u}%::transaction::playerto}%"
			send json of "{@P} {@Click-Here}Click Here " tooltip "{@P} To confirm your purchase" run "/ss confirm" then "{@Other-Text}to confirm your purchase" to player
		else if arg 1 is "quickshop":
			set {_p} to arg 2 parsed as offline player
			set {_c} to arg 3
			make {_p} execute command "/ss quickshop %{_c}%"
		else:
			set {_p} to arg 2 parsed as offline player
			message "{@P} There was an error" to {_p}
			
				

on rightclick on chest:
	if {ss::player::%uuid of player%::setting::c-m} is "add":
		cancel event
		if {ss::player::%uuid of player%::setting::add-num} is set:
			if {ss::player::%uuid of player%::chests::%location of block%} is not set:
				set {_b} to block above event-block
				if {_b} is sign:
					if line 1 of {_b} is "%player%" or "[Chest Shop]":
						set {ss::player::%uuid of player%::chests::%location of block%} to location of block
						message "{@P} Added chest! (%location of block%)"
						if {ss::player::%uuid of player%::setting::add-num} is 1:
							delete {ss::player::%uuid of player%::setting::add-num}
							delete {ss::player::%uuid of player%::setting::c-m}
						else if {ss::player::%uuid of player%::setting::add-num} is not "unlimited":
							subtract 1 from {ss::player::%uuid of player%::setting::add-num}
						if {@QuickShop} is true:
							execute console command "/codegenapi g c %{ss.codegenapi.key}% %player% 4"
							set {_c} to {cga.%{ss::settings::cga-key}%.%player%.code}
							set {ss::quickshop::%{_c}%} to location of block
							set {ss::quickshop::%location of block%} to {_c}
							set {ss::quickshop::%{_c}%::playerto} to player
							set {ss::quickshop::%{_c}%::amount} to line 2 of {_b} parsed as number
							set {_price::*} to line 3 of {_b} split at ":"
							replace all "B" and " " in {_price::1} with ""
							set {ss::quickshop::%{_c}%::price} to {_price::1} parsed as number
							set {ss::quickshop::%{_c}%::item} to line 4 of {_b} parsed as item
							delete {ss::player::%uuid of player%::setting::add-num}
							message "{@P} Users can do /ss quickshop %{_c}% - to quickly buy from this shop!"
	else if {ss::player::%uuid of player%::setting::c-m} is "remove":
		cancel event
		if {ss::player::%uuid of player%::setting::rev-num} is set:
			if {ss::player::%uuid of player%::chests::%location of block%} is set:
				delete {ss::player::%uuid of player%::chests::%location of block%}
				if {ss::quickshop::%location of block%} is set:
					set {_c} to {ss::quickshop::%location of block%}
					delete {ss::quickshop::%{_c}%::*}
					delete {ss::quickshop::%location of block%}
